# Continuous Integration
name: Continuous Integration

on:
  - push
  - pull_request
  - release

jobs:
  linux-test:
    strategy:
      matrix:
        platform: [ubuntu-latest]
        python-version: [3.9]

    runs-on: ${{ matrix.platform }}

    steps:
      - uses: actions/checkout@master
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version}}
      - name: Install tox
        run: pip install numpy tox tox-gh-actions 
      - name: Install pandoc
        run: sudo apt-get install pandoc
      - name: Test py39
        run: tox -re py39
      - name: Coverage
        run: tox -re coverage
      - name: Style
        run: tox -re style
      - name: Manifest
        run: tox -re check-manifest
      - name: Docstyle
        run: tox -re docstyle
      - name: Docs
        run: tox -re docs

  build:
       needs: linux-test
       runs-on: ${{ matrix.os }}
       strategy:
         matrix:
           os: [ubuntu-latest, windows-latest]
           python-version: ['3.8', '3.9', '3.10']
           exclude:
             - os: ubuntu-latest
               python-version: '3.8'
             - os: ubuntu-latest
               python-version: '3.9'
       steps:
       - uses: actions/checkout@v2
       - name: Set up Python
         uses: actions/setup-python@v2
         with:
           python-version: ${{ matrix.python-version }}
       - name: Install dependencies
         run: |
           python -m pip install --upgrade pip
           pip install scikit-build setuptools wheel numpy
       - uses: knicknic/os-specific-run@v1
         with:
           linux: python setup.py sdist
           windows: python setup.py bdist_wheel build_ext --fcompiler=gnu95 --compiler=mingw32
       - uses: actions/upload-artifact@v2
         with:
           name: dist
           path: dist

  build-manylinux:
    needs: linux-test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: RalfG/python-wheels-manylinux-build@v0.3.4-manylinux2010_x86_64
      with:
        python-versions: 'cp38-cp38 cp39-cp39 cp310-cp310'
        build-requirements: 'scikit-build numpy'
        pip-wheel-args: '-w ./dist --no-deps'
    - name: Remove non-compatible packages
      run: |
        sudo rm dist/*linux_x86_64.whl
    - uses: actions/upload-artifact@v2
      with:
        name: dist
        path: dist

  deploy:
     needs: [build, build-manylinux]
     if: github.event_name == 'release'
     runs-on: ubuntu-latest
     steps:
     - uses: actions/checkout@v2
     - uses: actions/download-artifact@v2
       with:
         name: dist
         path: dist
     - name: Set up Python
       uses: actions/setup-python@v2
       with:
         python-version: '3.9'
     - name: Publish
       env:
         TWINE_USERNAME: ${{ secrets.PYPI_USER }}
         TWINE_PASSWORD: ${{ secrets.PYPI_PASS }}
       run: |
         python -m pip install --upgrade pip
         pip install twine
         twine upload --skip-existing dist/*
