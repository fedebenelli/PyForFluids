[tox]
envlist =
    style,
    check-manifest,
    check-headers, check-testdir,
    docstyle,
    docs,
    py37, py38, py39,  py310
    coverage

# ENVS
# ----------

[gh-actions]
python =
    3.9: py39, coverage, style, check-manifest


[testenv]
usedevelop = True
deps =
	-r {toxinidir}/requirements.txt
	pytest
	pandas
commands = pytest tests/ {posargs}


[testenv:style]
description = "Style tests, using flake8 and fortran-linter"
deps =
	flake8
	flake8-black
	flake8-builtins
	flake8-import-order
	pep8-naming
	fortran-linter
skip_install = True
commands =
	flake8 setup.py pyforfluids/ tests/ {posargs}
	fortran-linter --syntax-only pyforfluids/fortran/


[testenv:coverage]
deps =
	{[testenv]deps}
	coverage
	pytest-cov
	coverage-badge
skip_install = True
commands =
	- coverage erase
	pytest -v tests/ --cov pyforfluids/ --cov-fail-under 90 --cov-report term-missing
	- coverage-badge -o .github/workflows/coverage.svg
	- coverage erase


[testenv:check-manifest]
skip_install = True
usedevelop = False
deps = check-manifest
commands = check-manifest --ignore *.so,*.DS_Store


[testenv:check-headers]
skip_install = True
deps =
    https://github.com/quatrope/qafan/archive/refs/heads/master.zip
commands =
    check-headers check pyforfluids/  tests/ setup.py --header-template .header-template {posargs}

[testenv:check-testdir]
skip_install = True
deps =
    https://github.com/quatrope/qafan/archive/refs/heads/master.zip
commands =
    check-testdir check tests/ --reference-dir pyforfluids/ {posargs}


[testenv:docstyle]
skip_install = True
usedevelop = False
deps = pydocstyle
commands = pydocstyle pyforfluids/ --convention=numpy


[testenv:docs]
description = "Invoke sphinx-build to build the HTML docs"
whitelist_externals = make
usedevelop = False
skip_install = False
changedir = docs
deps = -r {toxinidir}/docs/requirements.txt
commands = sphinx-build -W -b html -d {envtmpdir}/doctrees source {envtmpdir}/html
